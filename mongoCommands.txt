db                                                     shows corrent database

use myDb                                               shifts to myDb database or create new database if not exist

db.myColl.insertOne({x : 1})                           data will be inserted in myDb.

db.myColl.insertMany([{a : 1}, {b : 2}, {c : 1}])

db.myColl.find({})                                     To find all data in myColl collection




// new collection will be created in myDb database and data will be inserted

db.movies.insertMany([
   {
      title: 'Titanic',
      year: 1997,
      genres: [ 'Drama', 'Romance' ],
      rated: 'PG-13',
      languages: [ 'English', 'French', 'German', 'Swedish', 'Italian', 'Russian' ],
      released: ISODate("1997-12-19T00:00:00.000Z"),
      awards: {
         wins: 127,
         nominations: 63,
         text: 'Won 11 Oscars. Another 116 wins & 63 nominations.'
      },
      cast: [ 'Leonardo DiCaprio', 'Kate Winslet', 'Billy Zane', 'Kathy Bates' ],
      directors: [ 'James Cameron' ]
   },
   {
      title: 'The Dark Knight',
      year: 2008,
      genres: [ 'Action', 'Crime', 'Drama' ],
      rated: 'PG-13',
      languages: [ 'English', 'Mandarin' ],
      released: ISODate("2008-07-18T00:00:00.000Z"),
      awards: {
         wins: 144,
         nominations: 106,
         text: 'Won 2 Oscars. Another 142 wins & 106 nominations.'
      },
      cast: [ 'Christian Bale', 'Heath Ledger', 'Aaron Eckhart', 'Michael Caine' ],
      directors: [ 'Christopher Nolan' ]
   },
   {
      title: 'Spirited Away',
      year: 2001,
      genres: [ 'Animation', 'Adventure', 'Family' ],
      rated: 'PG',
      languages: [ 'Japanese' ],
      released: ISODate("2003-03-28T00:00:00.000Z"),
      awards: {
         wins: 52,
         nominations: 22,
         text: 'Won 1 Oscar. Another 51 wins & 22 nominations.'
      },
      cast: [ 'Rumi Hiiragi', 'Miyu Irino', 'Mari Natsuki', 'Takashi Nait√®' ],
      directors: [ 'Hayao Miyazaki' ]
   },
   {
      title: 'Casablanca',
      genres: [ 'Drama', 'Romance', 'War' ],
      rated: 'PG',
      cast: [ 'Humphrey Bogart', 'Ingrid Bergman', 'Paul Henreid', 'Claude Rains' ],
      languages: [ 'English', 'French', 'German', 'Italian' ],
      released: ISODate("1943-01-23T00:00:00.000Z"),
      directors: [ 'Michael Curtiz' ],
      awards: {
         wins: 9,
         nominations: 6,
         text: 'Won 3 Oscars. Another 6 wins & 6 nominations.'
      },
      lastupdated: '2015-09-04 00:22:54.600000000',
      year: 1942
   }
])



db.movies.find( { directors: "Christopher Nolan" } )

db.movies.find( { released: { $lt: ISODate("2000-01-01") } } )    Movies that released befor 2000-01-01, $lt for less than

db.movies.find( { awards.wins: { $gt: 100 } } );

db.movies.find( { languages: { $in: [ "Japanese", "Mandarin" ] } } )

db.movies.find( { }, { "title": 1, "directors": 1, "year": 1 } )

db.movies.aggregate( [
   { $unwind: "$genres" },
   {
     $group: {
       _id: "$genres",
       genreCount: { $count: { } }
     }
   },
   { $sort: { "genreCount": -1 } }
] )

$unwind to output a document for each element in the genres array.
$group and the $count accumulator to count the number of occurrences of each genre. This value is stored in the genreCount field.
$sort to sort the resulting documents by the genreCount field in descending order.



db.myColl.updateOne({x : 1}, {$set: {x : 2}})         find({filter}, {$set {}}) updates first matched


db.myColl.insertMany([
    { p : 1, 
      q : 2
    },
    { p : 1, 
      q : 4
    }
])


db.myColl.updateMany({p : 1}, {$set: {q : 6}})    update all matched

db.myColl.deleteOne({p : 1})

db.myColl.deleteMany({p : 1})


